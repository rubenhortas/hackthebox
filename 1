#!/usr/bin/env python3

"""
Script to solve the crypto challenge "LostModulus" from https://app.hackthebox.com

You can read the full walkthrough here: https://rubenhortas.github.io/posts/htb-lost-modulus
"""

# Requires pycryptodome
from Crypto.Util.number import getPrime, bytes_to_long, long_to_bytes
from gmpy2 import get_context, root


class RSA:
    def __init__(self):
        self.p = getPrime(512)  # 512 bits length
        self.q = getPrime(512)
        self.e = 3  # public exponent
        self.n = self.p * self.q  # modulus (Public by construction)


if __name__ == '__main__':
    crypto = RSA()
    flag = open('flag.txt', 'r').read().strip().encode()
    encrypted_flag_hex = flag.decode()
    encrypted_flag_bytes = bytes.fromhex(encrypted_flag_hex)
    m = bytes_to_long(encrypted_flag_bytes)

    if m < crypto.n:
        get_context().precision = 2000
        pt_int = int(root(m, crypto.e))
        pt_bytes = long_to_bytes(pt_int)
        pt = pt_bytes.decode()

        print(pt)
